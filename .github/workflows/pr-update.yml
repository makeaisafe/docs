name: Add Issue to Collection

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  add-to-collection:
    if: ${{ github.event.comment.body == 'looks good to me' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.PAT_TOKEN_30 }}@github.com/${{ github.repository }}.git

      - name: Get Issue Content and Category
        id: issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_TOKEN_30 }}
          script: |
            const { owner, repo } = context.repo;
            const issue_number = context.payload.issue.number;
            
            const issueData = await github.rest.issues.get({
              owner,
              repo,
              issue_number
            });

            const title = issueData.data.title;
            const body = issueData.data.body || '';

            // Extract category from title
            const categoryMatch = title.match(/^\[(.*?)\]/);
            const category = categoryMatch ? categoryMatch[1] : "Uncategorized";

            return { category, body };
          result-encoding: json

      - name: Update Collection File
        run: |
          mkdir -p articles/about
          if [ ! -f articles/about/collection.md ]; then
            touch articles/about/collection.md
          fi

          CATEGORY="${{ fromJson(steps.issue.outputs.result).category }}"
          ISSUE_BODY="${{ fromJson(steps.issue.outputs.result).body }}"

          TEMP_FILE=$(mktemp)

          # Ensure category exists, otherwise append it at the end
          if ! grep -q "## $CATEGORY" articles/about/collection.md; then
            echo -e "\n## $CATEGORY" >> articles/about/collection.md
          fi

          # Insert issue content under the correct category
          awk -v category="## $CATEGORY" -v issue="- "issue_body '
            BEGIN { found=0 }
            {
              print $0
              if ($0 == category) { found=1; next }
              if (found && /^## /) { print issue issue_body; found=0 }
            }
            END { if (found) print issue issue_body }  # Append if category is at the end
          ' articles/about/collection.md > "$TEMP_FILE"

          mv "$TEMP_FILE" articles/about/collection.md

          # Ensure file changes are staged
          git add articles/about/collection.md

          - name: Update Collection File
          run: |
            mkdir -p articles/about
            if [ ! -f articles/about/collection.md ]; then
              touch articles/about/collection.md
            fi
  
            CATEGORY="${{ fromJson(steps.issue.outputs.result).category }}"
            ISSUE_BODY="${{ fromJson(steps.issue.outputs.result).body }}"
  
            TEMP_FILE=$(mktemp)
  
            # Ensure category exists, otherwise append it at the end
            if ! grep -q "## $CATEGORY" articles/about/collection.md; then
              echo -e "\n## $CATEGORY" >> articles/about/collection.md
            fi
  
            # Insert issue content under the correct category
            awk -v category="## $CATEGORY" -v issue="- "issue_body '
              BEGIN { found=0 }
              {
                print $0
                if ($0 == category) { found=1; next }
                if (found && /^## /) { print issue issue_body; found=0 }
              }
              END { if (found) print issue issue_body }  # Append if category is at the end
            ' articles/about/collection.md > "$TEMP_FILE"
  
            mv "$TEMP_FILE" articles/about/collection.md
  
            # Ensure file changes are staged
            git add articles/about/collection.md
  
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_TOKEN_30 }}
          commit-message: 'docs: add issue #${{ github.event.issue.number }} to collection'
          title: 'Add Issue #${{ github.event.issue.number }} to Collection'
          body: |
            This PR adds the content from issue #${{ github.event.issue.number }} to the collection under category **${{ fromJson(steps.issue.outputs.result).category }}**.
            
            Original issue: ${{ github.event.issue.html_url }}
          branch: add-issue-${{ github.event.issue.number }}
          base: main
          delete-branch: true
